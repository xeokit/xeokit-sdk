name: Release

on:
  release:
    types: [published]


jobs:
  setup:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.trim.outputs.version }}
    steps:
      - id: trim
        run: echo "::set-output name=version::${TAG:1}"
        env:
          TAG: ${{ github.event.release.tag_name }}

  release:
    permissions:
      contents: write  # for actions/upload-release-asset to upload release asset
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: Restore
        run: npm ci

      - name: Setup and build
        run: |
          npm install -g json
          json -I -f package.json -e "this.version=\"$VERSION\""
          npm run build
          npm pack
        env:
          VERSION: ${{ needs.setup.outputs.version }}

      - name: Publish to NPM
        run: |
          npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Upload NPM package file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ needs.setup.outputs.version }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ format('@xeokit/xeokit-sdk-{0}.tgz', needs.setup.outputs.version) }}
          asset_name: ${{ format('@xeokit/xeokit-sdk-{0}.tgz', needs.setup.outputs.version) }}
          asset_content_type: application/gzip